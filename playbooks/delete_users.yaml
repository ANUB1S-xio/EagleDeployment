name: "Delete_Users_Except_Specific_Ones"
version: "1.4"

hosts:
{{- range .Hosts }}
  - "{{ .IP }}"
{{- end }}

vars:
  excluded_users:
    - hunter
    - sudo
    - root
    - EagleAdmin

tasks:

  - name: "Detect non-system users"
    ssh_user: "{{ env `EAGLE_SSH_USER` }}"
    ssh_password: "{{ env `EAGLE_SSH_PASS` }}"
    port: 22
    loop: "{{ .Hosts }}"
    loop_control:
      loop_var: item
    register: all_users
    command: |
      awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd

  - name: "Log detected users"
    loop: "{{ .Hosts }}"
    loop_control:
      loop_var: item
    debug:
      msg: "Detected users on {{ item.IP }}: {{ all_users.outputs[item.IP].stdout_lines }}"

  - name: "Set users to delete"
    loop: "{{ .Hosts }}"
    loop_control:
      loop_var: item
    set_fact:
      users_to_delete: "{{ all_users.outputs[item.IP].stdout_lines | difference .Vars.excluded_users }}"

  - name: "Log users to delete"
    loop: "{{ .Hosts }}"
    loop_control:
      loop_var: item
    debug:
      msg: "Users to delete on {{ item.IP }}: {{ users_to_delete }}"

  - name: "Delete users safely"
    ssh_user: "{{ env `EAGLE_SSH_USER` }}"
    ssh_password: "{{ env `EAGLE_SSH_PASS` }}"
    port: 22
    when: users_to_delete | length > 0
    loop: "{{ .Hosts }}"
    loop_control:
      loop_var: item
    with_items: "{{ users_to_delete }}"
    command: |
      if who | grep -q "{{ item }}"; then
        echo "Skipping deletion of logged-in user: {{ item }}"
      else
        echo '{{ env `EAGLE_SSH_PASS` }}' | sudo -S userdel -r "{{ item }}" || echo "Failed to delete {{ item }}"
      fi

settings:
  port: 22
